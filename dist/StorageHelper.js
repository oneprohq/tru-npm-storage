'use strict';var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator['throw'](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{'default':mod};};Object.defineProperty(exports,'__esModule',{value:true});const axios_1=__importDefault(require('axios'));class StorageHelper{constructor(fileServiceUrl,env){this.cacheFileCategories={};this.fileServiceUrl='';this.gcsRootUrl='https://storage.googleapis.com';this.getPublicUrlByCategory=(category,fileName)=>{const fileCategory=this.getFileCategoryByName(category);return`${this.gcsRootUrl}/${fileCategory.bucket}/`+`${fileCategory.directory}/${fileName}`;};this.getFileCategoryByName=categoryName=>{if(!this.cacheFileCategories[categoryName]){this.fetchAndCacheFileCategories();return{bucket:'',directory:''};}return this.cacheFileCategories[categoryName];};this.fetchAndCacheFileCategories=()=>__awaiter(this,void 0,void 0,function*(){const response=yield axios_1.default.request({url:'/private/file/v1/fileCategories',baseURL:this.fileServiceUrl,method:'GET'});const fileCategories=response.data.fileCategories;for(const fileCategory of fileCategories){this.cacheFileCategories[fileCategory.name]={bucket:fileCategory.bucket+this.env,directory:fileCategory.directory};}});this.fileServiceUrl=fileServiceUrl;this.env=env;this.fetchAndCacheFileCategories();}}exports.StorageHelper=StorageHelper;